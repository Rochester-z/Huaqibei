package ${package.Controller};

##给模板文件导包
import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import org.springframework.web.bind.annotation.*;
import javax.annotation.Resource;
import java.util.List;
import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;

import $!{package.Service}.$!{table.serviceName};       //导user包，静态变动态
import ${package.Entity}.${entity};


#if(${restControllerStyle})
import org.springframework.web.bind.annotation.RestController;
#else
import org.springframework.stereotype.Controller;
#end
#if(${superControllerClassPackage})
import ${superControllerClassPackage};
#end

/**
 * <p>
 * $!{table.comment} 前端控制器
 * </p>
 *
 * @author ${author}
 * @since ${date}
 */
#if(${restControllerStyle})
@RestController
#else
@Controller
#end
@RequestMapping("#if(${package.ModuleName})/${package.ModuleName}#end/#if(${controllerMappingHyphenStyle})${controllerMappingHyphen}#else${table.entityPath}#end")
#if(${kotlin})
class ${table.controllerName}#if(${superControllerClass}) : ${superControllerClass}()#end

#else
#if(${superControllerClass})
public class ${table.controllerName} extends ${superControllerClass} {
#else
public class ${table.controllerName} {
#end

        @Resource
        private ${table.serviceName} ${table.entityPath}Service;

        //新增或者更新
        @PostMapping
        public Boolean save(@RequestBody ${entity} ${table.entityPath}) { //user变table.entityPath
                return ${table.entityPath}Service.saveOrUpdate(${table.entityPath});
        }


        //删除
        @DeleteMapping("/{id}")
        public Boolean delete(@PathVariable Integer id) {
                return ${table.entityPath}Service.removeById(id);
        }


        //查询所有
        @GetMapping
        public List<${entity}> findAll() {    //User变entity
                return ${table.entityPath}Service.list();  //user变table.entityPath
                }

        //根据ID查询
        @GetMapping("/{id}")
        public ${entity} findOne(@PathVariable Integer id) {
                return ${table.entityPath}Service.getById(id);
        }


        //分页查询
        @GetMapping("/page")
        public Page<${entity}> findPage(@RequestParam Integer pageNum,
                                        @RequestParam Integer pageSize) {
                QueryWrapper<User> queryWrapper = new QueryWrapper<>();
                queryWrapper.orderByDesc("id");   //插入倒序查看
                return ${table.entityPath}Service.page(new Page<>(pageNum, pageSize),queryWrapper);
        }





        @PostMapping("/del/batch")
        public boolean deleteBatch(@RequestBody List<Integer> ids) {   //{}中的id和PathVariable对应 {1,2,3}
        //      return userMapper.deleteById(id);
                return ${table.entityPath}Service.removeBatchByIds(ids);  //MybaticsPlus框架
        }
}

#end